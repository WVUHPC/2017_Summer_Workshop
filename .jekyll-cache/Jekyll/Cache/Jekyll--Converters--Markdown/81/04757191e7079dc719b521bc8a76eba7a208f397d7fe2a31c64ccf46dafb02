I"˙.<h2 id="configuration-file-_configyml">Configuration File <code class="language-plaintext highlighter-rouge">_config.yml</code></h2>

<p>You should edit the <code class="language-plaintext highlighter-rouge">_config.yml</code> configuration file in the root directory of your workshop to configure some site-wide variables and make the site function correctly:</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">carpentry</code> - to tell us which carpentry workshop this is, possible values are (‚Äúswc‚Äù, ‚Äúdc‚Äù or ‚Äúlc‚Äù)</li>
  <li><code class="language-plaintext highlighter-rouge">title</code> - overall title for all pages</li>
  <li><code class="language-plaintext highlighter-rouge">repository</code> - as &lt;USERNAME&gt;/&lt;PROJECT&gt; (e.g. <code class="language-plaintext highlighter-rouge">gvwilson/2015-07-01-miskatonic</code>), so that URLs resolve correctly both locally and on GitHub - see https://help.github.com/articles/repository-metadata-on-github-pages</li>
  <li><code class="language-plaintext highlighter-rouge">workshop_repo</code> - the URL of your workshop repository on GitHub</li>
  <li><code class="language-plaintext highlighter-rouge">workshop_site</code> - the repository‚Äôs GitHub Pages URL</li>
</ul>

<p>For example, if the URL for the repository is <code class="language-plaintext highlighter-rouge">https://github.com/gvwilson/2015-07-01-miskatonic</code>,
the URL for the website will be <code class="language-plaintext highlighter-rouge">http://gvwilson.github.io/2015-07-01-miskatonic</code>.</p>

<p>You should not need to modify any of the other values in <code class="language-plaintext highlighter-rouge">_config.yml</code>.</p>

<h2 id="home-page-data">Home Page: Data</h2>

<p>Your workshop‚Äôs home page lives in <code class="language-plaintext highlighter-rouge">index.html</code>,
which must define the following values in its header:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">layout</code> must be <code class="language-plaintext highlighter-rouge">workshop</code>.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">carpentry</code> must be either ‚Äúdc‚Äù (for Data Carpentry) or ‚Äúswc‚Äù (for
Software Carpentry).</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">venue</code> is the short name of the institution or group hosting the
workshop, like ‚ÄúEuphoric State University‚Äù.  It should <em>not</em>
include the address or other details, since this value is
displayed in a table on the main
<a href="http://software-carpentry.org">Software Carpentry</a> website.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">address</code> is the workshop‚Äôs address (including details like the
room number). The address should be all on one line.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">country</code> must be a two-letter ISO-3166 code for the country in
which the workshop is going to take place, such as ‚Äúfr‚Äù (for
France) or ‚Äúnz‚Äù (for New Zealand) - see <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements">Wikipedia</a>
for a complete list.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">language</code> is the language that will be used in the workshop.
It must be an <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO 639-1 code</a>.
Note that two-letter codes mean different things for countries
and languages: ‚Äúar‚Äù is Arabic when used for a language, but
Argentina when used for a country.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">latlng</code> is the latitude and longitude of the workshop site (so we
can put a pin on our map).  You can use
<a href="http://itouchmap.com/latlong.html">this site</a> to find these
values.  You can <em>not</em> put spaces around the comma separating the
latitude from the longitude.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">humandate</code> is the human-friendly start and end date for the
 workshop.  Please use three-letter month names and abbreviations
 (e.g., <code class="language-plaintext highlighter-rouge">Jul</code> instead of <code class="language-plaintext highlighter-rouge">July</code>), since these values are displayed
 in a table on our websites.  (Strictly speaking this information
 is redundant, since we require a machine-readable <code class="language-plaintext highlighter-rouge">startdate</code> and
 <code class="language-plaintext highlighter-rouge">enddate</code>, but reliably translating those into human-readable
 dates is an interesting challenge‚Ä¶)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">humantime</code> is the human-friendly start and end time for each day of
the workshop, e.g., ‚Äú09:00 am - 4:00 pm‚Äù or ‚Äú09:00-16:00‚Äù.  (We
recognize that we ought to allow different start or end times on
different days, but going down that path leads eventually to
embedding iCal date/time specifications in our headers, which in
turn leads to madness‚Ä¶)</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">startdate</code> is the workshop‚Äôs starting date in YYYY-MM-DD format,
such as <code class="language-plaintext highlighter-rouge">2015-07-01</code>.  You must use four digits for the year and
two each for the month and day.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">enddate</code> is the workshop‚Äôs ending date in the same format.  If your
workshop is only one day long, the <code class="language-plaintext highlighter-rouge">enddate</code> field should be deleted.
If your workshop has a more complicated schedule (e.g., a half day a
week for four weeks), please delete the <code class="language-plaintext highlighter-rouge">enddate</code> field and only tell
us its start date.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">instructor</code> is a comma-separated list of instructor names.  The
list must be enclosed in square brackets, and each name must be in
double quotes, as in <code class="language-plaintext highlighter-rouge">["Alan Turing","Grace Hopper"]</code>.  Do not
include other information (such as the word ‚Äúinstructor‚Äù) in these
values.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">helper</code> is a comma-separated list of helper names formatted in the
same way as the instructor names.  If there are no helpers, use an
empty list <code class="language-plaintext highlighter-rouge">[]</code>.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">contact</code> is the contact email address to use for your workshop.
If you do not provide a contact email address, your website will
display the address for the workshop coordinators (who probably
won‚Äôt be able to answer questions about the specific details of
your workshop).</p>
  </li>
</ul>

<p>The header may optionally define the following:</p>

<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">etherpad</code> is the URL for the Etherpad for your workshop.  If you are
not using an Etherpad, you can delete this line.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">eventbrite</code> is the multi-digit Eventbrite registration key.  If you
are using Eventbrite, the Software Carpentry administrators will
give this to you.  If you are using something else, you may delete
this line.  Note: this value must be given as a string in double
quotes, rather than as a number.</p>
  </li>
</ul>

<h2 id="home-page-schedule-and-syllabus">Home Page: Schedule and Syllabus</h2>

<p>You should edit the sections titled <code class="language-plaintext highlighter-rouge">Schedule</code> and <code class="language-plaintext highlighter-rouge">Syllabus</code>
so that they show what you‚Äôre actually planning to teach and when.</p>

<h2 id="home-page-setup">Home Page: Setup</h2>

<p>You should delete the pieces of the <code class="language-plaintext highlighter-rouge">Setup</code> section
related to software you will not be using in your workshop,
so that learners don‚Äôt spend time installing software they don‚Äôt need.</p>

<h2 id="setup-installation-tests">Setup: Installation tests</h2>

<p>If you intend to use the installation-test scripts,
uncomment the paragraph linking to <code class="language-plaintext highlighter-rouge">setup/index.html</code> in <code class="language-plaintext highlighter-rouge">index.html</code>
and edit <code class="language-plaintext highlighter-rouge">setup/swc-installation-test-2.py</code> as described below.</p>

<p><code class="language-plaintext highlighter-rouge">swc-installation-test-1.py</code> is pretty simple, and just checks that
the students have a recent enough version of Python installed that
they can run <code class="language-plaintext highlighter-rouge">swc-installation-test-2.py</code>.</p>

<p><code class="language-plaintext highlighter-rouge">swc-installation-test-2.py</code>
checks for a list of dependencies and prints error messages if a
package is not installed, or if the installed version is not current
enough.  By default, the script checks for pretty much anything that
has ever been used at a Software Carpentry workshop, which is probably
not what you want for your particular workshop.</p>

<p>Go through <code class="language-plaintext highlighter-rouge">swc-installation-test-2.py</code> and
comment any dependencies you don‚Äôt need out of the <code class="language-plaintext highlighter-rouge">CHECKS</code> list.  You
might also want to skim through the minimum version numbers listed
where particular dependencies are defined (e.g. <code class="language-plaintext highlighter-rouge">('git', 'Git', (1, 7,
0), None)</code>).  For the most part, fairly conservative values have been
selected, so students with modern machines should be fine.  If your
workshop has stricter version requirements, feel free to bump them
accordingly.</p>

<p>Similarly, the virtual dependencies can be satisfied by any of several
packages.  If you don‚Äôt want to support a particular package (e.g. if
you have no Emacs experience and don‚Äôt want to be responsible for
students who show up with Emacs as their only editor), you can comment
out that particular <code class="language-plaintext highlighter-rouge">or_dependency</code>.</p>

<h2 id="updating-the-repository">Updating the repository</h2>

<p>If for some reason,
such as the installation instructions having become disconnected
with the current lesson material,
you need to get changes from this repository
into the clone of it with your workshop page,
please follow the steps bellow:</p>

<ol>
  <li>
    <p>Add the workshop-template repository as upstream:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git remote add upstream https://github.com/swcarpentry/workshop-template.git
</code></pre></div>    </div>
  </li>
  <li>
    <p>Fetch the data from upstream repository (also know as the workshop-template
repository):</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git fetch upstream
</code></pre></div>    </div>
  </li>
  <li>
    <p>Merge the new changes:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git merge upstream/gh-pages
</code></pre></div>    </div>
  </li>
  <li>
    <p>When get conflicts, solve it and</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git commit -a
</code></pre></div>    </div>
  </li>
  <li>
    <p>Push the changes to GitHub:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ git push origin gh-pages
</code></pre></div>    </div>
  </li>
</ol>
:ET